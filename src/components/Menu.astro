---
import ThemeToggle from "./ThemeToggle.astro"
---

<button id="menu-button" class="opacity-0 z-50 border
                                border-[rgb(12,197,234)] rounded-md fixed w-20 h-8
                                text-lg right-16 top-7"
    ><div class="flex flex-col justify-center items-center gap-1">
        <div class="w-8 h-0.5 rounded-md bg-slate-400"></div>
        <div class="w-8 h-0.5 rounded-md bg-slate-400"></div>
        <div class="w-8 h-0.5 rounded-md bg-slate-400"></div>
    </div>
</button>
<div id="menu-container" class="opacity-0 invisible z-50 h-auto fixed
                                w-20 rounded-md right-16 top-16">
    <div id="menu-content" class="flex flex-col w-full h-full items-center text-lg">
        <div class="flex border-[rgb(12,197,234)] rounded-md hover:border-x justify-center w-full">
            <a href="/" aria-label="home">home</a>
        </div>
        <div class="flex grow-0 border-[rgb(12,197,234)] rounded-md hover:border-x
                    justify-center w-full">
            <a href="/about" aria-label="about">about</a>
        </div>
        <div class="flex grow-0 border-[rgb(12,197,234)] rounded-md hover:border-x
                    justify-center w-full">
            <a href="/contact" aria-label="contact">contact</a>
        </div>
        <div class="flex grow-0 border-[rgb(12,197,234)] rounded-md hover:border-x
                    justify-center w-full">
            <ThemeToggle />
        </div>
    </div>
</div>

<script>
    const menuButton: HTMLElement | null = document.getElementById("menu-button");
    const menuContainer: HTMLElement | null = document.getElementById("menu-container");

    // Initialize menu state from sessionStorage
    const initializeMenuState = () => {
        const menuIsDisplayed = window.sessionStorage.getItem("menuIsDisplayed") === "true";
        if (menuContainer) {
            if (menuIsDisplayed) {
                menuContainer.classList.remove("invisible");
            } else {
                menuContainer.classList.add("invisible");
            }
        }
    };

    // menu toggle
    menuButton?.addEventListener("click", () => {
        const menuIsDisplayed = window.sessionStorage.getItem("menuIsDisplayed") === "true";
        if (menuContainer) {
            if (menuIsDisplayed) {
                menuButton.innerHTML = `
                <div class="flex flex-col justify-center items-center gap-1">
                    <div class="w-8 h-0.5 rounded-md bg-slate-400"></div>
                    <div class="w-8 h-0.5 rounded-md bg-slate-400"></div>
                    <div class="w-8 h-0.5 rounded-md bg-slate-400"></div>
                </div>
                `
                menuContainer.classList.add("invisible");
                window.sessionStorage.setItem("menuIsDisplayed", "false");
            } else {
                menuButton.textContent = "X"
                menuContainer.classList.remove("invisible");
                window.sessionStorage.setItem("menuIsDisplayed", "true");
            }
        } else {
            alert("Menu could not be loaded");
        }
    });

    // display the menu on load
    document.addEventListener('DOMContentLoaded', () => {
        // Run initialization on page load
        initializeMenuState();
        
        const transitionClasses = ['transform', 'opacity-100', 'transition-all',
                                   'duration-1000', 'linear']
        if (menuButton) {
            setTimeout(() => {
                menuButton.classList.add(...transitionClasses)
            }, 10)
        } else {
            console.error(`Menu button not found. Got ${menuButton} instead`)
        }

        if (menuContainer) {
            setTimeout(() => {
                menuContainer.classList.add(...transitionClasses)
            }, 10);
        } else {
            console.error(`Menu container not found. Got ${menuContainer} instead`)
        }
    })
</script>