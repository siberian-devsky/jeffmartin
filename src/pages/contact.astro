---
import Layout from "../layouts/Layout.astro";
import ContactForm from "../components/ContactForm.astro";
import { generateToken } from "../utils/csrf";

// Generate CSRF token
let storedCsrfToken = Astro.cookies.get("csrfToken")?.value;
if (!storedCsrfToken) {
    storedCsrfToken = generateToken();
    Astro.cookies.set("csrfToken", storedCsrfToken, {
        httpOnly: true,
        secure: true,
        sameSite: 'strict',
        path: '/'
    });
}
---
<Layout>
    <ContactForm storedCsrfToken={storedCsrfToken}/>
</Layout>

<script>
    const form = document.getElementById('contact-form') as HTMLFormElement;
    const alertElement = document.getElementById('email-alert');
      
    form?.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const formData = new FormData(e.target as HTMLFormElement);
        const csrfToken = formData.get('csrfToken')?.toString();

        try {
            const response = await fetch('/api/validateCsrf', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ csrfToken }),
            });

            if (!response.ok) {
                throw new Error('CSRF validation failed');
            }

            // send mail
            const emailResponse = await fetch('/api/sendEmail', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json'},
                body: JSON.stringify({
                    name: formData.get('name'),
                    email: formData.get('email'),
                    message: formData.get("message")
                })
            })
            
            if (!emailResponse.ok) {
                throw new Error("Failed to send email")
            }

            showAlert('success', 'Your message has been sent successfully!');
            form.reset();
        
        } catch (error) {
            console.error('Error:', error)
            showAlert('error', 'There was an error sending your message. Please try again.');
        }
    });

    function showAlert(status: 'success' | 'error', message: string) {
        if (alertElement) {
            alertElement.className = `fixed bottom-4 right-4 p-4 rounded-lg shadow-lg ${
                status === 'success' ? 'bg-green-300 text-green-800' : 'bg-red-300 text-red-800'
            }`;
            alertElement.textContent = message;
            alertElement.classList.remove('hidden');

            setTimeout(() => {
                alertElement.classList.add('hidden');
            }, 5000);
        }
    }

    const button = document.getElementById("submit")
    
    button?.addEventListener("mouseup", (e) => {
        button.classList.toggle("scale-95")
    })

    button?.addEventListener("mousedown", (e) => {
        button.classList.toggle("scale-95")
    })   
</script>